package model

import (
	"bytes"
	"crypto/sha256"
	"encoding/hex"
	"time"
)

type VulnRecord struct {
	VulnRecordKey

	Owner          string
	RepoName       string
	IssueID        int
	IssueState     string
	LastModifiedAt time.Time
}

type VulnRecords []VulnRecord

func (x VulnRecords) Find(key VulnRecordKey) *VulnRecord {
	for _, r := range x {
		if r.VulnRecordKey == key {
			return &r
		}
	}
	return nil
}

type VulnRecordKey struct {
	RepoID   GitHubRepoID
	VulnID   string
	Location string
}

func (x *VulnRecordKey) RecordID() string {
	value := bytes.Join([][]byte{
		[]byte(x.RepoID.String()),
		[]byte(x.VulnID),
		[]byte(x.Location),
	}, []byte{0x00})

	// hash value by sha256
	h := sha256.New()
	_, _ = h.Write(value)
	hv := h.Sum(nil)

	return hex.EncodeToString(hv)
}
